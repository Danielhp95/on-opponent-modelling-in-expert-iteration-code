experiment:
  algorithms:
    - vanilla_expert_iteration_500_GamesPerGeneration_20_MCTSBudget_NoRollout_3_epochs_64_BatchSize
    - vanilla_expert_iteration_1000_GamesPerGeneration_20_MCTSBudget_NoRollout_5_epochs_124_BatchSize
    - vanilla_expert_iteration_2000_GamesPerGeneration_20_MCTSBudget_NoRollout_8_epochs_256_BatchSize
    #
    - expert_iteration_neural_net_opponent_modelling_500_GamesPerGeneration_20_MCTSBudget_NoRollout_3_epochs_64_BatchSize
    - expert_iteration_neural_net_opponent_modelling_1000_GamesPerGeneration_20_MCTSBudget_NoRollout_5_epochs_124_BatchSize
    - expert_iteration_neural_net_opponent_modelling_2000_GamesPerGeneration_20_MCTSBudget_NoRollout_8_epochs_256_BatchSize
    #
    - expert_iteration_brexit_500_GamesPerGeneration_20_MCTSBudget_NoRollout_3_epochs_64_BatchSize
    - expert_iteration_brexit_1000_GamesPerGeneration_20_MCTSBudget_NoRollout_5_epochs_124_BatchSize
    - expert_iteration_brexit_2000_GamesPerGeneration_20_MCTSBudget_NoRollout_8_epochs_256_BatchSize
    
  environment: ['Connect4-v0', 'multiagent-sequential']
  experiment_id: 'BRExIt_Opponent_Modelling'
  desired_winrate: 0.8
  # ideally, a multiple of policy updates. Param :games_per iteration:
  training_episodes: 1000
  benchmarking_episodes: 100
  num_envs: -1


# --------- Agent hyperparameters ------
cnn_arch: &cnn_architecture
    phi_arch: 'CNN'
    use_batch_normalization: True
    preprocessed_input_dimensions: [7, 6]
    channels: [3, 10, 20, 20, 20, 1]
    kernel_sizes: [3, 3, 3, 3, 3]
    paddings: [1, 1, 1, 1, 1]
    strides: [1, 1, 1, 1, 1]
    residual_connections: [[0,1], [1,2], [2,3], [3,4]]

agents:
######## Vanilla ExIt ################
  vanilla_expert_iteration: &vanilla_expert_iteration
    <<: *cnn_architecture
    use_agent_modelling: False
    use_agent_modelling_in_mcts: False
    use_apprentice_in_expert: True
    use_cuda: False
    games_per_iteration: 500
    # Dataset params
    initial_memory_size: 3000
    memory_size_increase_frequency: 30
    end_memory_size: 30000
    # MCTS config
    mcts_budget: 50
    mcts_rollout_budget: 100
    mcts_exploration_factor: 1.4142
    mcts_use_dirichlet: True
    mcts_dirichlet_alpha: 1.4142
    # Neural net config
    batch_size: 64
    num_epochs_per_iteration: 3
    learning_rate: 1.0e-3
    # NN: Feature extractor
    feature_extractor_arch: 'CNN'

  expert_iteration_debug:
    <<: *vanilla_expert_iteration
    mcts_budget: 4
    mcts_rollout_budget: 100
    use_apprentice_in_expert: True
    use_agent_modelling: True
    use_agent_modelling_in_mcts: True
    use_dirichlet: False
    games_per_iteration: 10
    batch_size: 8

  vanilla_expert_iteration_500_GamesPerGeneration_20_MCTSBudget_NoRollout_3_epochs_64_BatchSize:
    <<: *vanilla_expert_iteration
    mcts_budget: 20
    games_per_iteration: 500
    num_epochs_per_iteration: 3
    batch_size: 64

  vanilla_expert_iteration_1000_GamesPerGeneration_20_MCTSBudget_NoRollout_5_epochs_128_BatchSize:
    <<: *vanilla_expert_iteration
    mcts_budget: 20
    games_per_iteration: 1000
    num_epochs_per_iteration: 5
    batch_size: 128

  vanilla_expert_iteration_2000_GamesPerGeneration_20_MCTSBudget_NoRollout_8_epochs_256_BatchSize:
    <<: *vanilla_expert_iteration
    mcts_budget: 20
    games_per_iteration: 2000
    num_epochs_per_iteration: 8
    batch_size: 256

######## ExIt with opponent modelling on neural net (ala DPIQN) ################
  expert_iteration_neural_net_opponent_modelling_500_GamesPerGeneration_20_MCTSBudget_NoRollout_3_epochs_64_BatchSize:
    <<: *vanilla_expert_iteration
    use_agent_modelling: True
    use_agent_modelling_in_mcts: False
    use_apprentice_in_expert: True
    mcts_budget: 20
    games_per_iteration: 500
    num_epochs_per_iteration: 3
    batch_size: 64

  expert_iteration_neural_net_opponent_modelling_1000_GamesPerGeneration_20_MCTSBudget_NoRollout_5_epochs_128_BatchSize:
    <<: *vanilla_expert_iteration
    use_agent_modelling: True
    use_agent_modelling_in_mcts: False
    use_apprentice_in_expert: True
    mcts_budget: 20
    games_per_iteration: 1000
    num_epochs_per_iteration: 5
    batch_size: 128

  expert_iteration_neural_net_opponent_modelling_2000_GamesPerGeneration_20_MCTSBudget_NoRollout_8_epochs_256_BatchSize:
    <<: *vanilla_expert_iteration
    use_agent_modelling: True
    use_agent_modelling_in_mcts: False
    use_apprentice_in_expert: True
    mcts_budget: 20
    games_per_iteration: 2000
    num_epochs_per_iteration: 8
    batch_size: 256

######## ExIt with opponent modelling on neural net AND using true opponent models during search ################
  expert_iteration_brexit_500_GamesPerGeneration_20_MCTSBudget_NoRollout_3_epochs_64_BatchSize:
    <<: *vanilla_expert_iteration
    use_agent_modelling: True
    use_agent_modelling_in_mcts: True
    use_apprentice_in_expert: True
    mcts_budget: 20
    games_per_iteration: 500
    num_epochs_per_iteration: 3
    batch_size: 64

  expert_iteration_brexit_1000_GamesPerGeneration_20_MCTSBudget_NoRollout_5_epochs_128_BatchSize:
    <<: *vanilla_expert_iteration
    use_agent_modelling: True
    use_agent_modelling_in_mcts: True
    use_apprentice_in_expert: True
    mcts_budget: 20
    games_per_iteration: 1000
    num_epochs_per_iteration: 5
    batch_size: 128

  expert_iteration_brexit_2000_GamesPerGeneration_20_MCTSBudget_NoRollout_8_epochs_256_BatchSize:
    <<: *vanilla_expert_iteration
    use_agent_modelling: True
    use_agent_modelling_in_mcts: True
    use_apprentice_in_expert: True
    mcts_budget: 20
    games_per_iteration: 2000
    num_epochs_per_iteration: 8
    batch_size: 256
